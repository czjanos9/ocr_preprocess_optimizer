trainData//test-1-1-2-2(8)/currResultA-1-1-2-2.txt
Blur:1,Canny:1,dilate:2,Erode:2,

aka
(e
apacitiv
félvezető
é;
-aden
egyes
cellában
csy
államot
jelenti
az
ti
ése
ai
i
röltését:
így
ők
kk
költött
vagy
kisütött
é72béé
"vagy
0
eggptáő
v
,
örzi
,
árolók
e
ideig
meló
endő.
a
fát
isztor
elege
fo
98
-
ez
olcsó
és
nagykapacitású
tárolók
építhetg,
k
a
cellánkénti
ki
technológiával.
árolás
nátránya,
hogy
az
elektromos
töltés
í
dővel
úg
igy
jellegű
ő
3
apa
itiv
jellegt
jár
néhányszol
10
ms
(milliszekundum),
ezért
ha
8
;
s
a
andó
frissítést
igényel,
azaz
a
cellákat
újra
el
8
rformációl
z
idő
ma
n
,,
ez
az
,
aszűnik.
ez
áll
illetve
megsz
ven
el,
a
ram
a
am-mal
-
a
dram
olvasáskor
elveszíti
a
tartalma
3
:x
ne
ves
3
formál
a]
§
en
az
s
:
enirácerő
lgyttd
4
sa
,
b
in
kívül
—
ale
sítésről
és
az
adatvisszaírásról
a
memól
ia
áramkörej
be:
kell
írni.
a
ís
a
működését,
hiszen
a
frissítés
ideje
alatt
a
drak
j
ssen
lassítj
"sl
ma
dram-ok
elérési
ideje
több
10
ns.
ylagos
lassúsága
ellenére
-
a
számítógépek,
munkaállomások
ta
d5
;
,
mt
:
felhasználni,
mivel
a
dram
nagy
kapacitású,
olcsó
memóriag,
tehát
azt
vissza
kodnak,
am!
visz
másra
nem
haszná
a
dram-ot
-
a
viszon
rativ
memóriájaként
szokták
pus.
a
memória
áramkörök
mindig
lassúbbak
voltak,
mint
a
cpu-k,
így
a
processzornak
ály.
lában
várnia
kell,
míg
a
memóriából
megkap
egy
adatot.
(minél
lassúbb
a
memória,
annáj
többet
kell
várnia
a
processzornak.)
felmerül
a
kérdés,
hogy
a
sebesség
növelése
érdekében
(drága
és
kis
kapacitású)
sram.
okat.
vagy
a
tárolókapacitás
növelésére
(olcsó,
de
lassú)
dram-okat
használjunk-e.
ezt
a
problémát
úgy
oldhatjuk
meg,
hogy
a
kicsi,
de
gyors
memóriát
kombináljuk
a
nagykapacitá-
j
sú.
de
lassú
memóriával.
így
egy
viszonylag
gyors
és
nagy
memóriát
kapunk.
!
;
ezt
az
eljárást
,
cache-elérésnek"
hívják,
amely
a
következőképpen
működik:
amikor
:
cpu-nak
szüksége
van
egy
adatra,
először
azt
a
cache-ben
(sram)
nézi
meg.
csak
akkor
.
tra
ői
ebeket
(dram),
ha
az
adat
nincs
ott.
az
információ
az
operatív
memóné
,ache-be
kerül,
ahonnan
a
processzor
már
használhatja.
ez
így
még
nem
gyorsítja
2
memória
elérést,
de
amikor
a
memória
és
cache
között
ad
ásolunk,
akkor
nemcsak
éz
az
egyet
írjuk
át,
amire
éppen
szükség
ött
adatot
másolunk,
akkor
nemcsa
1
utasítások
és
adatok
-
az
ge
van
a
cpu-nak,
hanem
a
következőket
is.
mive
esetek
döntő
részében
—
sor
aa
nő
c
el,
így
a
processzor
következő
adatké
ben
—
sorban,
egymás
után
helyezkednek
el.
íg
á
rése
5
kyrnnnénte
ma:
kednek
el,
12
már
a
cache-ben
lesznek.
esetén
a
szükséges
információk
—
nagy
valószínűséggel
a
cache-memóriá
sa
k
lehet
további
gyorsítások
é
nek
a
cpu.
rdekében
többszi
hi
kívül
(intel
386),
és
lehetnek
belül
(intel
496).
a
nem
tekintjük
kül
o90szintű
cache-t
is
alkalmazhatnak.
;
hi
öö
fs
külön
foglalkozunk
a
cmos
ae
kategóriának,
de
a
cmos
(c
memóriával.
tű
mejnária
melybe
nentary
metal
oxid
kikapcsolása
ur
lyan
változó
e
se
akk
ása
után
j
970
adatokat
(
uwmulátort
vau
memória
.
:
e
2
tr
,
a
.
gő
az
eltérő
felhasználás
jellege
miált
mégb
aaos
1!
niconductor)
egy
kis
áramfelvételű.
kismétő
j
árolunk,
amelyekre
szükség
van
a
számla
gy
elemet
használ
áramfelvétel
következtében
-
egy
kiskapüc"
4
cmos
alos
tápellátás
biztosítására.
vapadatait
és
;
tartalmazza
sa
számítógép
a
kis
a
számí
a
foly,
;
fógépekbe
yam
nböző
eszkö
vi
en
43
nint
4
krz
át
tendszerdátumot
és
az
időt,
valan
ásá
i
,
.
a
penn
§
fő
mdításához
szükséges
információkat.